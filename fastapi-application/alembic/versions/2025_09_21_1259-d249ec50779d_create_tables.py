"""create tables

Revision ID: d249ec50779d
Revises:
Create Date: 2025-09-21 12:59:58.204233

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd249ec50779d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('hashed_password', sa.String(), nullable=False),
        sa.Column('username', sa.String(length=64), nullable=False),
        sa.Column('email', sa.String(length=128), nullable=False),
        sa.Column('role', sa.Enum('merchant', 'trader', 'admin', name='userrole'), nullable=False),
        sa.Column('balance_usdt', sa.Numeric(precision=18, scale=6), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)

    op.create_table(
        'applications',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('merchant_id', sa.Integer(), nullable=False),
        sa.Column('trader_id', sa.Integer(), nullable=True),
        sa.Column('amount_original', sa.Numeric(precision=18, scale=2), nullable=False),
        sa.Column('currency', sa.String(length=8), nullable=False),
        sa.Column('amount_usdt', sa.Numeric(precision=18, scale=6), nullable=False),
        sa.Column('commission_usdt', sa.Numeric(precision=18, scale=6), nullable=False),
        sa.Column('status', sa.Enum('created', 'approved', 'cancelled', name='applicationstatus'), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['merchant_id'], ['users.id'], name=op.f('fk_applications_merchant_id_users')),
        sa.ForeignKeyConstraint(['trader_id'], ['users.id'], name=op.f('fk_applications_trader_id_users')),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_applications_user_id_users')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_applications'))
    )
    op.create_index(op.f('ix_applications_merchant_id'), 'applications', ['merchant_id'], unique=False)
    op.create_index(op.f('ix_applications_trader_id'), 'applications', ['trader_id'], unique=False)
    op.create_index(op.f('ix_applications_user_id'), 'applications', ['user_id'], unique=False)

    op.create_table(
        'balance_transactions',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('delta_usdt', sa.Numeric(precision=18, scale=6), nullable=False),
        sa.Column('reason', sa.String(length=64), nullable=False),
        sa.Column('balance_before', sa.Numeric(precision=18, scale=6), nullable=False),
        sa.Column('balance_after', sa.Numeric(precision=18, scale=6), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_balance_transactions_user_id_users')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_balance_transactions'))
    )
    op.create_index(op.f('ix_balance_transactions_user_id'), 'balance_transactions', ['user_id'], unique=False)

    op.create_table(
        'merchant_trader_links',
        sa.Column('merchant_id', sa.Integer(), nullable=False),
        sa.Column('trader_id', sa.Integer(), nullable=False),
        sa.Column('status', sa.Enum('active', 'disabled', name='link_status_enum'), nullable=False),
        sa.Column('priority', sa.Integer(), nullable=False),
        sa.Column('weight', sa.Integer(), nullable=False),
        sa.Column('currencies', sa.String(length=128), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['merchant_id'], ['users.id'], name=op.f('fk_merchant_trader_links_merchant_id_users'), ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['trader_id'], ['users.id'], name=op.f('fk_merchant_trader_links_trader_id_users'), ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_merchant_trader_links'))
    )
    op.create_index(op.f('ix_merchant_trader_links_merchant_id'), 'merchant_trader_links', ['merchant_id'], unique=False)
    op.create_index(op.f('ix_merchant_trader_links_trader_id'), 'merchant_trader_links', ['trader_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_merchant_trader_links_trader_id'), table_name='merchant_trader_links')
    op.drop_index(op.f('ix_merchant_trader_links_merchant_id'), table_name='merchant_trader_links')
    op.drop_table('merchant_trader_links')

    op.drop_index(op.f('ix_balance_transactions_user_id'), table_name='balance_transactions')
    op.drop_table('balance_transactions')

    op.drop_index(op.f('ix_applications_user_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_trader_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_merchant_id'), table_name='applications')
    op.drop_table('applications')

    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
